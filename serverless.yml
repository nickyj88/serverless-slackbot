service: serverless-slackbot

custom:
  namespace: ${self:service}-${self:custom.stage}
  stage: ${opt:stage, self:provider.stage}

# Change configurations as desired
provider:
  name: aws
  runtime: nodejs4.3
  stage: prod
  region: us-west-2
  environment:
    CLIENT_ID: '' # Fill in the client ID from your slack app here
    CLIENT_SECRET: # Fill in the client secret from  your slack app here
    INSTALL_SUCCESS_URL: # LP for successful install
    INSTALL_ERROR_URL: # LP for failed install
    NAMESPACE: ${self:custom.namespace}
    TEAMS_TABLE: ${self:custom.namespace}-teams
    WEBHOOK_URL: # Fill in the url of your slack app here
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource:
        - arn:aws:dynamodb:*:*:table/${self:provider.environment.TEAMS_TABLE}

functions:
  # Install the app to your team
  # Creates a slack bot
  install:
    handler: install.handler
    events:
      - http:
          path: install
          method: get
  # Listen for deploy messages from heroku
  heroku:
    handler: heroku.handler
    events:
      - http:
          # Paste this endpoint in as Heroku's http hook URL.
          path: deploy
          method: post

resources:
  Resources:
    # Save team info in Dynamo for authentication for future usage (Events API)
    TeamsDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TEAMS_TABLE}
        AttributeDefinitions:
          - AttributeName: team_id
            AttributeType: S
        KeySchema:
          - AttributeName: team_id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
